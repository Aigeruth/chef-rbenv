{"name":"Chef-rbenv","tagline":"Chef cookbook for rbenv. Manages rbenv and its installed rubies. Several LWRPs are also defined.","body":"[![Build Status](https://secure.travis-ci.org/fnichol/chef-rbenv.png?branch=master)](http://travis-ci.org/fnichol/chef-rbenv)\r\n\r\n## <a name=\"description\"></a> Description\r\n\r\nManages [rbenv][rbenv_site] and its installed Rubies.\r\nSeveral lightweight resources and providers ([LWRPs][lwrp]) are also defined.\r\n\r\n## <a name=\"usage\"></a> Usage\r\n\r\n### <a name=\"usage-system-rubies\"></a> rbenv Installed System-Wide with Rubies\r\n\r\nMost likely, this is the typical case. Include `recipe[rbenv::system]` in your\r\nrun\\_list and override the defaults you want changed. See [below](#attributes)\r\nfor more details.\r\n\r\nIf your platform is the Mac, you may need to modify your\r\n[profile](#mac-system-note).\r\n\r\n### <a name=\"usage-user-rubies\"></a> rbenv Installed For A Specific User with Rubies\r\n\r\nIf you want a per-user install (like on a Mac/Linux workstation for\r\ndevelopment, CI, etc.), include `recipe[rbenv::user]` in your run\\_list and\r\nadd a user hash to the `user_installs` attribute list. For example:\r\n\r\n    node.default['rbenv']['user_installs'] = [\r\n      { 'user'    => 'tflowers',\r\n        'rubies'  => ['1.9.3-p0', 'jruby-1.6.5'],\r\n        'global'  => '1.9.3-p0',\r\n        'gems'    => {\r\n          '1.9.3-p0'    => [\r\n            { 'name'    => 'bundler'\r\n              'version' => '1.1.rc.5'\r\n            },\r\n            { 'name'    => 'rake' }\r\n          ],\r\n          'jruby-1.6.5' => [\r\n            { 'name'    => 'rest-client' }\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n\r\nSee [below](#attributes) for more details.\r\n\r\n### <a name=\"usage-system\"></a> rbenv Installed System-Wide and LWRPs Defined\r\n\r\nIf you want to manage your own rbenv environment with the provided\r\nLWRPs, then include `recipe[rbenv::system_install]` in your run\\_list\r\nto prevent a default rbenv Ruby being installed. See the\r\n[Resources and Providers](#lwrps) section for more details.\r\n\r\nIf your platform is the Mac, you may need to modify your\r\n[profile](#mac-system-note).\r\n\r\n### <a name=\"usage-user\"></a> rbenv Installed For A Specific User and LWRPs Defined\r\n\r\nIf you want to manage your own rbenv environment for users with the provided\r\nLWRPs, then include `recipe[rbenv::user_install]` in your run\\_list and add a\r\nuser hash to the `user_installs` attribute list. For example:\r\n\r\n    node.default['rbenv']['user_installs'] = [\r\n      { 'user' => 'tflowers' }\r\n    ]\r\n\r\nSee the [Resources and Providers](#lwrps) section for more details.\r\n\r\n### <a name=\"usage-minimal\"></a> Ultra-Minimal Access To LWRPs\r\n\r\nSimply include `recipe[rbenv]` in your run\\_list and the LWRPs will be\r\navailable to use in other cookboks. See the [Resources and Providers](#lwrps)\r\nsection for more details.\r\n\r\n### <a name=\"usage-other\"></a> Other Use Cases\r\n\r\n* If node is running in a Vagrant VM, then including `recipe[rbenv::vagrant]`\r\nin your run\\_list can help with resolving the *chef-solo* binary on subsequent\r\n\r\n## <a name=\"requirements\"></a> Requirements\r\n\r\n### <a name=\"requirements-chef\"></a> Chef\r\n\r\nTested on 11.4.4 but newer and older version should work just\r\nfine. File an [issue][issues] if this isn't the case.\r\n\r\n### <a name=\"requirements-platform\"></a> Platform\r\n\r\nThe following platforms have been tested with this cookbook, meaning that\r\nthe recipes and LWRPs run on these platforms without error:\r\n\r\n* ubuntu (10.04/12.04)\r\n* debian (6.0)\r\n* freebsd\r\n* redhat\r\n* centos\r\n* fedora\r\n* amazon\r\n* scientific\r\n* suse\r\n* mac\\_os\\_x\r\n\r\nPlease [report][issues] any additional platforms so they can be added.\r\n\r\n### <a name=\"requirements-cookbooks\"></a> Cookbooks\r\n\r\nThere are **no** external cookbook dependencies. However, if you\r\nwant to manage Ruby installations or use the `rbenv_ruby` LWRP then you will\r\nneed to include the [ruby\\_build cookbook][ruby_build_cb].\r\n\r\n## <a name=\"installation\"></a> Installation\r\n\r\nDepending on the situation and use case there are several ways to install\r\nthis cookbook. All the methods listed below assume a tagged version release\r\nis the target, but omit the tags to get the head of development. A valid\r\nChef repository structure like the [Opscode repo][chef_repo] is also assumed.\r\n\r\n### <a name=\"installation-berkshelf\"></a> Using Berkshelf\r\n\r\n[Berkshelf][berkshelf] is a cookbook dependency manager and development\r\nworkflow assistant. To install Berkshelf:\r\n\r\n    cd chef-repo\r\n    gem install berkshelf\r\n    berks init\r\n\r\nTo reference the Git version:\r\n\r\n    repo=\"fnichol/chef-rbenv\"\r\n    latest_release=$(curl -s https://api.github.com/repos/$repo/git/refs/tags \\\r\n    | ruby -rjson -e '\r\n      j = JSON.parse(STDIN.read);\r\n      puts j.map { |t| t[\"ref\"].split(\"/\").last }.sort.last\r\n    ')\r\n    cat >> Berksfile <<END_OF_BERKSFILE\r\n    cookbook 'rbenv',\r\n      :git => 'git://github.com/$repo.git', :branch => '$latest_release'\r\n    END_OF_BERKSFILE\r\n    berks install\r\n\r\n### <a name=\"installation-librarian\"></a> Using Librarian-Chef\r\n\r\n[Librarian-Chef][librarian] is a bundler for your Chef cookbooks.\r\nTo install Librarian-Chef:\r\n\r\n    cd chef-repo\r\n    gem install librarian\r\n    librarian-chef init\r\n\r\nTo reference the Git version:\r\n\r\n    repo=\"fnichol/chef-rbenv\"\r\n    latest_release=$(curl -s https://api.github.com/repos/$repo/git/refs/tags \\\r\n    | ruby -rjson -e '\r\n      j = JSON.parse(STDIN.read);\r\n      puts j.map { |t| t[\"ref\"].split(\"/\").last }.sort.last\r\n    ')\r\n    cat >> Cheffile <<END_OF_CHEFFILE\r\n    cookbook 'rbenv',\r\n      :git => 'git://github.com/$repo.git', :ref => '$latest_release'\r\n    END_OF_CHEFFILE\r\n    librarian-chef install\r\n\r\n### <a name=\"installation-platform\"></a> From the Community Site\r\n\r\nThis cookbook is not currently available on the site due to the flat\r\nnamespace for cookbooks.\r\n\r\n## <a name=\"recipes\"></a> Recipes\r\n\r\n### <a name=\"recipes-default\"></a> default\r\n\r\nInstalls the rbenv gem and initializes Chef to use the Lightweight Resources\r\nand Providers ([LWRPs][lwrp]).\r\n\r\nUse this recipe explicitly if you only want access to the LWRPs provided.\r\n\r\n### <a name=\"recipes-system-install\"></a> system_install\r\n\r\nInstalls the rbenv codebase system-wide (that is, into `/usr/local/rbenv`). This\r\nrecipe includes *default*.\r\n\r\nUse this recipe by itself if you want rbenv installed system-wide but want\r\nto handle installing Rubies, invoking LWRPs, etc..\r\n\r\n### <a name=\"recipes-system\"></a> system\r\n\r\nInstalls the rbenv codebase system-wide (that is, into `/usr/local/rbenv`) and\r\ninstalls rubies driven off attribute metadata. This recipe includes *default*\r\nand *system_install*.\r\n\r\nUse this recipe by itself if you want rbenv installed system-wide with rubies\r\ninstalled.\r\n\r\n### <a name=\"recipes-user-install\"></a> user_install\r\n\r\nInstalls the rbenv codebase for a list of users (selected from the\r\n`node['rbenv']['user_installs']` hash). This recipe includes *default*.\r\n\r\nUse this recipe by itself if you want rbenv installed for specific users in\r\nisolation but want each user to handle installing Rubies, invoking LWRPs, etc.\r\n\r\n### <a name=\"recipes-user\"></a> user\r\n\r\nInstalls the rbenv codebase for a list of users (selected from the\r\n`node['rbenv']['user_installs']` hash) and installs rubies driven off attribte\r\nmetadata. This recipe includes *default* and *user_install*.\r\n\r\nUse this recipe by itself if you want rbenv installed for specific users in\r\nisolation with rubies installed.\r\n\r\n### <a name=\"recipes-vagrant\"></a> vagrant\r\n\r\nAn optional recipe if Chef is installed in a non-rbenv Ruby in a\r\n[Vagrant][vagrant] virtual machine. This recipe installs a `chef-solo`\r\nwrapper script so Chef doesn't need to be re-installed in the global rbenv Ruby.\r\n\r\n## <a name=\"attributes\"></a> Attributes\r\n\r\n### <a name=\"attributes-git-url\"></a> git_url\r\n\r\nThe Git URL which is used to install rbenv.\r\n\r\nThe default is `\"git://github.com/sstephenson/rbenv.git\"`.\r\n\r\n### <a name=\"attributes-git-ref\"></a> git_ref\r\n\r\nA specific Git branch/tag/reference to use when installing rbenv. For\r\nexample, to pin rbenv to a specific release:\r\n\r\n    node.default['ruby_build']['git_ref'] = \"v0.2.1\"\r\n\r\nThe default is `\"v0.4.0\"`.\r\n\r\n### <a name=\"attributes-upgrade\"></a> upgrade\r\n\r\nDetermines how to handle installing updates to the rbenv. There are currently\r\n2 valid values:\r\n\r\n* `\"none\"`, `false`, or `nil`: will not update rbenv and leave it in its\r\n  current state.\r\n* `\"sync\"` or `true`: updates rbenv to the version specified by the\r\n  `git_ref` attribute or the head of the master branch by default.\r\n\r\nThe default is `\"none\"`.\r\n\r\n### <a name=\"attributes-root-path\"></a> root_path\r\n\r\nThe path prefix to rbenv in a system-wide installation.\r\n\r\nThe default is `\"/usr/local/rbenv\"`.\r\n\r\n### <a name=\"attributes-rubies\"></a> rubies\r\n\r\nA list of additional system-wide rubies to be built and installed using the\r\n[ruby\\_build cookbook][ruby_build_cb]. You **must** include `recipe[ruby_build]`\r\nin your run\\_list for the `rbenv_ruby` LWRP to work properly. For example:\r\n\r\n    node.default['rbenv']['rubies'] = [ \"1.9.3-p0\", \"jruby-1.6.5\" ]\r\n\r\nThe default is an empty array: `[]`.\r\n\r\nAdditional environment variables can be passed to ruby_build via the environment variable.\r\nFor example:\r\n\r\n    node.default['rbenv']['rubies'] = [ \"1.9.3-p0\", \"jruby-1.6.5\",\r\n      {\r\n      :name => '1.9.3-327',\r\n      :environment => { 'CFLAGS' => '-march=native -O2 -pipe' }\r\n      }\r\n    ]\r\n\r\n### <a name=\"attributes-user-rubies\"></a> user_rubies\r\n\r\nA list of additional system-wide rubies to be built and installed (using the\r\n[ruby\\_build cookbook][ruby_build_cb]) per-user when not explicitly set.\r\nFor example:\r\n\r\n    node.default['rbenv']['user_rubies'] = [ \"1.8.7-p352\" ]\r\n\r\nThe default is an empty array: `[]`.\r\n\r\nAdditional environment variables can be passed to ruby_build via the environment variable.\r\nFor example:\r\n\r\n    node.default['rbenv']['user_rubies'] = [ \"1.8.7-p352\",\r\n      {\r\n      :name => '1.9.3-327',\r\n      :environment => { 'CFLAGS' => '-march=native -O2 -pipe' }\r\n      }\r\n    ]\r\n### <a name=\"attributes-gems\"></a> gems\r\n\r\nA hash of gems to be installed into arbitrary rbenv-managed rubies system wide.\r\nSee the [rbenv_gem](#lwrps-rbgem) resource for more details about the options\r\nfor each gem hash and target Ruby environment. For example:\r\n\r\n    node.default['rbenv']['gems'] = {\r\n      '1.9.3-p0' => [\r\n        { 'name'    => 'vagrant' },\r\n        { 'name'    => 'bundler'\r\n          'version' => '1.1.rc.5'\r\n        }\r\n      ],\r\n      '1.8.7-p352' => [\r\n        { 'name'    => 'nokogiri' }\r\n      ]\r\n    }\r\n\r\nThe default is an empty hash: `{}`.\r\n\r\n### <a name=\"attributes-user-gems\"></a> user_gems\r\n\r\nA hash of gems to installed into arbitrary rbenv-managed rubies for each user\r\nwhen not explicitly set. See the [rbenv_gem](#lwrps-rbgem) resource for more\r\ndetails about the options for each gem hash and target Ruby environment. See\r\nthe [gems attribute](#attributes-gems) for an example.\r\n\r\nThe default is an empty hash: `{}`.\r\n\r\n### <a name=\"attributes-vagrant-system-chef-solo\"></a> vagrant/system_chef_solo\r\n\r\nIf using the `vagrant` recipe, this sets the path to the package-installed\r\n*chef-solo* binary.\r\n\r\nThe default is `\"/opt/ruby/bin/chef-solo\"`.\r\n\r\n### <a name=\"attributes-create-profiled\"></a> create_profiled\r\n\r\nThe user's shell needs to know about rbenv's location and set up the\r\nPATH environment variable. This is handled in the\r\n[system_install](#recipes-system_install) and\r\n[user_install](#recipes-user_install) recipes by dropping off\r\n`/etc/profile.d/rbenv.sh`. However, this requires root privilege,\r\nwhich means that a user cannot use a \"user install\" for only their\r\nuser.\r\n\r\nSet this attribute to `false` to skip creation of the\r\n`/etc/profile.d/rbenv.sh` template. For example:\r\n\r\n    node.default['rbenv']['create_profiled'] = false\r\n\r\nThe default is `true`.\r\n\r\n## <a name=\"lwrps\"></a> Resources and Providers\r\n\r\n### <a name=\"lwrps-rg\"></a> rbenv_global\r\n\r\nThis resource sets the global version of Ruby to be used in all shells, as per\r\nthe [rbenv global docs][rbenv_3_1].\r\n\r\n#### <a name=\"lwrps-rg-actions\"></a> Actions\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Action</th>\r\n      <th>Description</th>\r\n      <th>Default</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>create</td>\r\n      <td>\r\n        Sets the global version of Ruby to be used in all shells. See 3.1\r\n        rbenv global<sup>(1)</sup> for more details.\r\n      </td>\r\n      <td>Yes</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n1. [3.1 rbenv global][rbenv_3_1]\r\n\r\n#### <a name=\"lwrps-rg-attributes\"></a> Attributes\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Attribute</th>\r\n      <th>Description</th>\r\n      <th>Default Value</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>rbenv_version</td>\r\n      <td>\r\n        <b>Name attribute:</b> a version of Ruby being managed by rbenv.\r\n        <b>Note:</b> the version of Ruby must already be installed--this LWRP\r\n        will not install it automatically.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>user</td>\r\n      <td>\r\n        A users's isolated rbenv installation on which to apply an action. The\r\n        default value of <code>nil</code> denotes a system-wide rbenv\r\n        installation is being targeted. <b>Note:</b> if specified, the user\r\n        must already exist.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>root_path</td>\r\n      <td>\r\n        The path prefix to rbenv installation, for example:\r\n        <code>/opt/rbenv</code>.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n#### <a name=\"lwrps-rg-examples\"></a> Examples\r\n\r\n##### Set A Ruby As Global\r\n\r\n    rbenv_global \"1.8.7-p352\"\r\n\r\n##### Set System Ruby As Global\r\n\r\n    rbenv_global \"system\"\r\n\r\n##### Set A Ruby As Global For A User\r\n\r\n    rbenv_global \"jruby-1.7.0-dev\" do\r\n      user \"tflowers\"\r\n    end\r\n\r\n### <a name=\"lwrps-rsc\"></a> rbenv_script\r\n\r\nThis resource is a wrapper for the `script` resource which wraps the code block\r\nin an rbenv-aware environment. See the Opscode\r\n[script resource][script_resource] page and the [rbenv shell][rbenv_3_3]\r\ndocumentation for more details.\r\n\r\n#### <a name=\"lwrps-rsc-actions\"></a> Actions\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Action</th>\r\n      <th>Description</th>\r\n      <th>Default</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>run</td>\r\n      <td>Run the script</td>\r\n      <td>Yes</td>\r\n    </tr>\r\n    <tr>\r\n      <td>nothing</td>\r\n      <td>Do not run this command</td>\r\n      <td>&nbsp;</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\nUse `action :nothing` to set a command to only run if another resource\r\nnotifies it.\r\n\r\n#### <a name=\"lwrps-rsc-attributes\"></a> Attributes\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Attribute</th>\r\n      <th>Description</th>\r\n      <th>Default Value</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>name</td>\r\n      <td>\r\n        <b>Name attribute:</b> Name of the command to execute.\r\n      </td>\r\n      <td>name</td>\r\n    </tr>\r\n    <tr>\r\n      <td>rbenv_version</td>\r\n      <td>\r\n        A version of Ruby being managed by rbenv.\r\n      </td>\r\n      <td><code>\"global\"</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>root_path</td>\r\n      <td>\r\n        The path prefix to rbenv installation, for example:\r\n        <code>/opt/rbenv</code>.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>code</td>\r\n      <td>\r\n        Quoted script of code to execute.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>creates</td>\r\n      <td>\r\n        A file this command creates - if the file exists, the command will not\r\n        be run.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>cwd</td>\r\n      <td>\r\n        Current working director to run the command from.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>environment</td>\r\n      <td>\r\n        A has of environment variables to set before running this command.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>group</td>\r\n      <td>\r\n        A group or group ID that we should change to before running this\r\n        command.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>path</td>\r\n      <td>\r\n        An array of paths to use when searching for the command.\r\n      </td>\r\n      <td><code>nil</code>, uses system path</td>\r\n    </tr>\r\n    <tr>\r\n      <td>returns</td>\r\n      <td>\r\n        The return value of the command (may be an array of accepted values) -\r\n        this resource raises an exception if the return value(s) do not match.\r\n      </td>\r\n      <td><code>0</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>timeout</td>\r\n      <td>\r\n        How many seconds to let the command run before timing out.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>user</td>\r\n      <td>\r\n        A users's isolated rbenv installation on which to apply an action. The\r\n        default value of <code>nil</code> denotes a system-wide rbenv\r\n        installation is being targeted. <b>Note:</b> if specified, the user\r\n        must already exist.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>umask</td>\r\n      <td>\r\n        Umask for files created by the command.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n#### <a name=\"lwrps-rsc-examples\"></a> Examples\r\n\r\n##### Run A Rake Task\r\n\r\n    rbenv_script \"migrate_rails_database\" do\r\n      rbenv_version \"1.8.7-p352\"\r\n      user          \"deploy\"\r\n      group         \"deploy\"\r\n      cwd           \"/srv/webapp/current\"\r\n      code          %{rake RAILS_ENV=production db:migrate}\r\n    end\r\n\r\n### <a name=\"lwrps-rbgem\"></a> rbenv_gem\r\n\r\nThis resource is a close analog of the `gem_package` resource/provider which\r\nis rbenv-aware. See the Opscode [package resource][package_resource] and\r\n[gem package options][gem_package_options] pages for more details.\r\n\r\n#### <a name=\"lwrps-rbgem-actions\"></a> Actions\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Action</th>\r\n      <th>Description</th>\r\n      <th>Default</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>install</td>\r\n      <td>\r\n        Install a gem - if version is provided, install that specific version.\r\n      </td>\r\n      <td>Yes</td>\r\n    </tr>\r\n    <tr>\r\n      <td><upgrade/td>\r\n      <td>\r\n        Upgrade a gem - if version is provided, upgrade to that specific\r\n        version.\r\n      </td>\r\n      <td>&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td>remove</td>\r\n      <td>\r\n        Remove a gem.\r\n      </td>\r\n      <td>&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td>purge</td>\r\n      <td>\r\n        Purge a gem.\r\n      </td>\r\n      <td>&nbsp;</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n#### <a name=\"lwrps-rbr-attributes\"></a> Attributes\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Attribute</th>\r\n      <th>Description</th>\r\n      <th>Default Value</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>package_name</td>\r\n      <td>\r\n        <b>Name attribute:</b> the name of the gem to install.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>rbenv_version</td>\r\n      <td>\r\n        A version of Ruby being managed by rbenv.\r\n      </td>\r\n      <td><code>\"global\"</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>root_path</td>\r\n      <td>\r\n        The path prefix to rbenv installation, for example:\r\n        <code>/opt/rbenv</code>.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>version</td>\r\n      <td>\r\n        The specific version of the gem to install/upgrade.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>options</td>\r\n      <td>\r\n        Add additional options to the underlying gem command.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>source</td>\r\n      <td>\r\n        Provide an additional source for gem providers (such as RubyGems).\r\n        This can also include a file system path to a <code>.gem</code> file\r\n        such as <code>/tmp/json-1.5.1.gem</code>.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>user</td>\r\n      <td>\r\n        A users's isolated rbenv installation on which to apply an action. The\r\n        default value of <code>nil</code> denotes a system-wide rbenv\r\n        installation is being targeted. <b>Note:</b> if specified, the user\r\n        must already exist.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n#### <a name=\"lwrps-rbgem-examples\"></a> Examples\r\n\r\n##### Install A Gem\r\n\r\n    rbenv_gem \"thor\" do\r\n      rbenv_version   \"1.8.7-p352\"\r\n      action          :install\r\n    end\r\n\r\n    rbenv_gem \"json\" do\r\n      rbenv_version   \"1.8.7-p330\"\r\n    end\r\n\r\n    rbenv_gem \"nokogiri\" do\r\n      rbenv_version   \"jruby-1.5.6\"\r\n      version         \"1.5.0.beta.4\"\r\n      action          :install\r\n    end\r\n\r\n**Note:** the install action is default, so the second example is a more common\r\nusage.\r\n\r\n##### Install A Gem From A Local File\r\n\r\n    rbenv_gem \"json\" do\r\n      rbenv_version   \"ree-1.8.7-2011.03\"\r\n      source          \"/tmp/json-1.5.1.gem\"\r\n      version         \"1.5.1\"\r\n    end\r\n\r\n##### Keep A Gem Up To Date\r\n\r\n    rbenv_gem \"homesick\" do\r\n      action :upgrade\r\n    end\r\n\r\n**Note:** the global rbenv Ruby will be targeted if no `rbenv_version` attribute\r\nis given.\r\n\r\n##### Remove A Gem\r\n\r\n    rbenv_gem \"nokogiri\" do\r\n      rbenv_version   \"jruby-1.5.6\"\r\n      version         \"1.4.4.2\"\r\n      action          :remove\r\n    end\r\n\r\n### <a name=\"lwrps-rrh\"></a> rbenv_rehash\r\n\r\nThis resource installs shims for all Ruby binaries known to rbenv, as per\r\nthe [rbenv rehash docs][rbenv_3_6].\r\n\r\n#### <a name=\"lwrps-rrh-actions\"></a> Actions\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Action</th>\r\n      <th>Description</th>\r\n      <th>Default</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>run</td>\r\n      <td>Run the script</td>\r\n      <td>Yes</td>\r\n    </tr>\r\n    <tr>\r\n      <td>nothing</td>\r\n      <td>Do not run this command</td>\r\n      <td>&nbsp;</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\nUse `action :nothing` to set a command to only run if another resource\r\nnotifies it.\r\n\r\n#### <a name=\"lwrps-rrh-attributes\"></a> Attributes\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Attribute</th>\r\n      <th>Description</th>\r\n      <th>Default Value</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>name</td>\r\n      <td>\r\n        <b>Name attribute:</b> Name of the command to execute.\r\n      </td>\r\n      <td>name</td>\r\n    </tr>\r\n    <tr>\r\n      <td>user</td>\r\n      <td>\r\n        A users's isolated rbenv installation on which to apply an action. The\r\n        default value of <code>nil</code> denotes a system-wide rbenv\r\n        installation is being targeted. <b>Note:</b> if specified, the user\r\n        must already exist.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>root_path</td>\r\n      <td>\r\n        The path prefix to rbenv installation, for example:\r\n        <code>/opt/rbenv</code>.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n#### <a name=\"lwrps-rrh-examples\"></a> Examples\r\n\r\n##### Rehash A System-Wide rbenv\r\n\r\n    rbenv_rehash \"Doing the rehash dance\"\r\n\r\n##### Rehash A User's rbenv\r\n\r\n    rbenv_rehash \"Rehashing tflowers' rbenv\" do\r\n      user  \"tflowers\"\r\n    end\r\n\r\n### <a name=\"lwrps-rbr\"></a> rbenv_ruby\r\n\r\nThis resource uses the [ruby-build][ruby_build_site] framework to build and install\r\nRuby versions from definition files.\r\n\r\n**Note:** this LWRP requires the [ruby\\_build cookbook][ruby_build_cb] to be\r\nin the run list to perform the builds.\r\n\r\n#### <a name=\"lwrps-rbr-actions\"></a> Actions\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Action</th>\r\n      <th>Description</th>\r\n      <th>Default</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>install</td>\r\n      <td>\r\n        Build and install a Ruby from a definition file. See the ruby-build\r\n        readme<sup>(1)</sup> for more details.\r\n      </td>\r\n      <td>Yes</td>\r\n    </tr>\r\n    <tr>\r\n      <td>reinstall</td>\r\n      <td>\r\n        Force a recompiliation of the Ruby from source. The :install action\r\n        will skip a build if the target install directory already exists.\r\n      </td>\r\n      <td>&nbsp;</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n1. [ruby-build readme][rb_readme]\r\n\r\n#### <a name=\"lwrps-rbr-attributes\"></a> Attributes\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Attribute</th>\r\n      <th>Description</th>\r\n      <th>Default Value</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>definition</td>\r\n      <td>\r\n        <b>Name attribute:</b> the name of a built-in definition<sup>(1)</sup>\r\n        or the path to a ruby-build definition file.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>user</td>\r\n      <td>\r\n        A users's isolated rbenv installation on which to apply an action. The\r\n        default value of <code>nil</code> denotes a system-wide rbenv\r\n        installation is being targeted. <b>Note:</b> if specified, the user\r\n        must already exist.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>root_path</td>\r\n      <td>\r\n        The path prefix to rbenv installation, for example:\r\n        <code>/opt/rbenv</code>.\r\n      </td>\r\n      <td><code>nil</code></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n1. [built-in definition][rb_definitions]\r\n\r\n#### <a name=\"lwrps-rbr-examples\"></a> Examples\r\n\r\n##### Install Ruby From ruby-build\r\n\r\n    rbenv_ruby \"ree-1.8.7-2011.03\" do\r\n      action :install\r\n    end\r\n\r\n    rbenv_ruby \"jruby-1.6.5\"\r\n\r\n**Note:** the install action is default, so the second example is a more common\r\nusage.\r\n\r\n##### Reinstall Ruby\r\n\r\n    rbenv_ruby \"ree-1.8.7-2011.03\" do\r\n      action :reinstall\r\n    end\r\n\r\n## <a name=\"mac-system-note\"></a> System-Wide Mac Installation Note\r\n\r\nThis cookbook takes advantage of managing profile fragments in an\r\n`/etc/profile.d` directory, common on most Unix-flavored platforms.\r\nUnfortunately, Mac OS X does not support this idiom out of the box,\r\nso you may need to [modify][mac_profile_d] your user profile.\r\n\r\n## <a name=\"development\"></a> Development\r\n\r\n* Source hosted at [GitHub][repo]\r\n* Report issues/Questions/Feature requests on [GitHub Issues][issues]\r\n\r\nPull requests are very welcome! Make sure your patches are well tested.\r\nIdeally create a topic branch for every separate change you make.\r\n\r\n## <a name=\"license\"></a> License and Author\r\n\r\nAuthor:: [Fletcher Nichol][fnichol] (<fnichol@nichol.ca>) [![endorse](http://api.coderwall.com/fnichol/endorsecount.png)](http://coderwall.com/fnichol)\r\n\r\nCopyright 2011, Fletcher Nichol\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\n[berkshelf]:        http://berkshelf.com/\r\n[chef_repo]:        https://github.com/opscode/chef-repo\r\n[cheffile]:         https://github.com/applicationsonline/librarian/blob/master/lib/librarian/chef/templates/Cheffile\r\n[gem_package_options]: http://wiki.opscode.com/display/chef/Resources#Resources-GemPackageOptions\r\n[kgc]:              https://github.com/websterclay/knife-github-cookbooks#readme\r\n[librarian]:        https://github.com/applicationsonline/librarian#readme\r\n[lwrp]:             http://wiki.opscode.com/display/chef/Lightweight+Resources+and+Providers+%28LWRP%29\r\n[mac_profile_d]:    http://hints.macworld.com/article.php?story=20011221192012445\r\n[package_resource]: http://wiki.opscode.com/display/chef/Resources#Resources-Package\r\n[rb_readme]:        https://github.com/sstephenson/ruby-build#readme\r\n[rb_definitions]:   https://github.com/sstephenson/ruby-build/tree/master/share/ruby-build\r\n[rbenv_site]:       https://github.com/sstephenson/rbenv\r\n[rbenv_3_1]:        https://github.com/sstephenson/rbenv#section_3.1\r\n[rbenv_3_3]:        https://github.com/sstephenson/rbenv#section_3.3\r\n[rbenv_3_6]:        https://github.com/sstephenson/rbenv#section_3.6\r\n[ruby_build_cb]:    http://community.opscode.com/cookbooks/ruby_build\r\n[ruby_build_site]:  https://github.com/sstephenson/ruby-build\r\n[script_resource]:  http://wiki.opscode.com/display/chef/Resources#Resources-Script\r\n\r\n[fnichol]:      https://github.com/fnichol\r\n[repo]:         https://github.com/fnichol/chef-rbenv\r\n[issues]:       https://github.com/fnichol/chef-rbenv/issues\r\n","google":"UA-29670723-1","note":"Don't delete this file! It's used internally to help with page regeneration."}